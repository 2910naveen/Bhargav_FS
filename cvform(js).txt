import React, { useEffect, useState } from "react"; 
import axios from "axios";
import { useLocation, useNavigate } from "react-router-dom";
import { addUserAsyncAction } from "../store/userSlice";
import { useDispatch } from "react-redux";
const Cvupload = () => {
  
  const {state} =useLocation();
  //const [file, setFile] = useState(null);
  const dispatch=useDispatch();
  const [details,setDetails]=useState({currentjob:"",companyName:"",startDate:"",endDate:"",jobDescription:"",highestdegree:"",fieldOfStudy:"",institutionName:"",graduationDate:"",gpa:"",email:"",firstname:"",lastname:"",address:"",phone:""})
  const navigate=useNavigate();
  // const handleFileUpload = (event) => {
  //   const file = event.target.files[0];
  //   const blob = new Blob([file], { type: "application/pdf" });
  //   setFile(blob);
  // };

  const [selectedFile, setSelectedFile] = useState(null);
  const [uploadStatus, setUploadStatus] = useState('');

  const handleFileInputChange = (event) => {
    setSelectedFile(event.target.files[0]);
  };



   useEffect(()=>{
    console.log("cv upload",state);
    setDetails(state);
   },[]);
  const handleChange=(e)=>{
    let newUser={...details}
    newUser[e.target.name]=e.target.value;
    setDetails(newUser);
}

  const handleSubmit=()=>{
    dispatch(addUserAsyncAction(details));
    alert("File uploaded");
    navigate('/');
   }
   const handleSubmit2=()=>{
    //dispatch(addUserAsyncAction(user));
    //navigate('/Workexperience',{state:details});
   }
  // const handleUpload = () => {
  //   const formData = new FormData();
  //   formData.append("pdf", file);

  //   axios
  //     .post("http://localhost:3000/upload-pdf", formData)
  //     .then((response) => {
  //       console.log(response);
  //     })
  //     .catch((error) => {
  //       console.log(error);
  //     });
  // };

  const handleUploadFile = () => {
    if (!selectedFile) {
      setUploadStatus('Please select a file to upload');
      return;
    }

    const formData = new FormData();
    formData.append('pdf', selectedFile);

    axios.post('http://localhost:3002/users/upload', formData, {
      headers: {
        'Content-Type': 'multipart/form-data'
      }
    })
      .then(response => {
        setUploadStatus('File uploaded successfully');
      })
      .catch(error => {
        setUploadStatus('File upload failed');
        console.log(error);
      });
  };

  return (
    <div className="contanier" >
      <h1>Review your Details</h1>
        <form>
                <label htmlFor="firstname" >First Name</label>
                <input className="form-control" value={details.firstname} onChange={(e) => { handleChange(e) }} type="text" name="firstname" />
                <label htmlFor="lastname" >Last Name</label>
                <input className="form-control" value={details.lastname} onChange={(e) => { handleChange(e) }} type="text" name="lastname" />
                <label htmlFor="email" >Email ID</label>
                <input className="form-control" value={details.email} onChange={(e) => { handleChange(e) }} type="text" name="email" />
                <label htmlFor="phone" >Phone Number</label>
                <input className="form-control" value={details.phone} onChange={(e) => { handleChange(e) }} type="text" name="phone" />
                <label htmlFor="address" >Address</label>
                <input className="form-control" value={details.address} onChange={(e) => { handleChange(e) }} type="text" name="address" />
                <h1>Education</h1>
                <label htmlFor="highestdegree" >Highest degree</label>
                <input className="form-control" value={details.highestdegree} onChange={(e) => { handleChange(e) }} type="text" name="highestdegree" />
                <label htmlFor="fieldOfStudy" >Field Of Study</label>
                <input className="form-control" value={details.fieldOfStudy} onChange={(e) => { handleChange(e) }} type="text" name="fieldOfStudy" />
                <label htmlFor="institutionName" >Institution Name</label>
                <input className="form-control" value={details.institutionName} onChange={(e) => { handleChange(e) }} type="text" name="institutionName" />
                <label htmlFor="graduationDate" >Graduation Date</label>
                <input className="form-control" value={details.graduationDate} onChange={(e) => { handleChange(e) }} type="text" name="graduationDate" />
                <label htmlFor="gpa" >Gpa</label>
                <input className="form-control" value={details.gpa} onChange={(e) => { handleChange(e) }} type="text" name="gpa" />
                <h1>Work Experience</h1>
                <label htmlFor="currentjob" >Current job or Most recent job</label>
                <input className="form-control" value={details.currentjob} onChange={(e) => { handleChange(e) }} type="text" name="currentjob" />
                <label htmlFor="companyName" >Company Name</label>
                <input className="form-control" value={details.companyName} onChange={(e) => { handleChange(e) }} type="text" name="companyName" />
                <label htmlFor="startDate" >Start Date</label>
                <input className="form-control" value={details.startDate} onChange={(e) => { handleChange(e) }} type="text" name="startDate" />
                <label htmlFor="endDate" >End Date</label>
                <input className="form-control" value={details.endDate} onChange={(e) => { handleChange(e) }} type="text" name="endDate" />
                <label htmlFor="jobDescription" >Job Description</label>
                <input className="form-control" value={details.jobDescription} onChange={(e) => { handleChange(e) }} type="text" name="jobDescription" />
                <h1>Upload CV</h1>
      <input type="file" onChange={handleFileInputChange} />
      <button onClick={handleUploadFile}>Upload PDF</button>
      <p>{uploadStatus}</p>
      {/*<button type="button" className="btn btn-primary" onClick={handleSubmit2}>Previous</button>*/}
      <button type="button" className="btn btn-danger" onClick={handleSubmit}>Submit</button>
      </form>
    </div>
  );
};

export default Cvupload;
